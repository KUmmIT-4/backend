name: CD (DockerÎ°ú gradle build Ìè¨Ìï®)

on:
  push:
    branches:
      - 'develop'
      - 'main'

permissions:
  contents: read

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: add application.yml to directory
        run: echo "${{ secrets.APPLICATION_YML }}" > application.yml

      - uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha, mode=max


  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ deploy to server
        uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f # v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          envs: GITHUB_SHA
          script: |
            set -e # Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§ÌñâÏ§ëÏóê Ïò§Î•ò Î∞úÏÉùÏãú Î∞îÎ°ú Ï§ëÎã®
            
            echo "Stopping existing container"
            sudo docker stop kummit4
            sudo docker rm kummit4
            
            sudo docker ps -a
            
            echo "Pulling new image"
            sudo docker pull ${{secrets.DOCKER_USERNAME}}/${{secrets.DOCKER_IMAGE}}
            
            echo "Running new container"
            sudo docker run -d -p 8000:8080 --name sweetBalanceContainer -v /etc/localtime:/etc/localtime:ro -e TZ=Asia/Seoul ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}
            
            echo "Cleaning up old images"
            sudo docker image prune -f

